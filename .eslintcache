[{"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\index.js":"1","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\App.js":"2","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\reportWebVitals.js":"3","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Map.js":"4","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Landing.js":"5","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\CheckIn.js":"6","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Login.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":651,"mtime":1609842035238,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4382,"mtime":1609842035240,"results":"12","hashOfConfig":"9"},{"size":1356,"mtime":1609854531485,"results":"13","hashOfConfig":"9"},{"size":163,"mtime":1609850979212,"results":"14","hashOfConfig":"9"},{"size":172,"mtime":1609842035240,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"enwi4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\index.js",[],["33","34"],"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\App.js",["35"],"import \"./App.css\";\r\nimport Map from './pages/Map'\r\nimport Login from './pages/Login'\r\nimport Landing from './pages/Landing'\r\nimport CheckIn from './pages/CheckIn'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n\r\nconst axios = require(\"axios\");\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Landing}/>\r\n            <Route path=\"/login\" exact component={Login}/>\r\n            <Route path=\"/checkin\" exact component={CheckIn}/>\r\n            <Route path=\"/map\" exact component={Map}/>\r\n        </Switch>\r\n    </Router>\r\n\r\n\r\n   \r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\reportWebVitals.js",[],"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Map.js",["36"],"import \"../App.css\";\r\nimport { useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nfunction Map() {\r\n  useEffect(() => {\r\n    const campusInfo = async () => {\r\n      let response = await axios.get(\"http://localhost:1880/sensors\");\r\n      console.log(JSON.parse(response.data.replace(/&quot;/g, '\"')));\r\n      let parsedRespones = JSON.parse(response.data.replace(/&quot;/g, '\"'));\r\n      console.log(parsedRespones);\r\n      var map = new window.Mazemap.Map({\r\n        // container id specified in the HTML\r\n        container: \"map\",\r\n\r\n        campuses: 289, //UMEÃ… CAMPUS ID 289\r\n\r\n        // initial position in lngLat format\r\n        center: { lng: 20.307517, lat: 63.819489 },\r\n\r\n        // initial zoom\r\n        zoom: 18,\r\n\r\n        zLevel: 2,\r\n      });\r\n\r\n      map.on(\"load\", () => {\r\n        map.addSource(\"heatpoints\", {\r\n          type: \"geojson\",\r\n          data: generateJson(parsedRespones),\r\n        });\r\n\r\n        map.addLayer({\r\n          id: \"heatpoints\",\r\n          type: \"heatmap\",\r\n          source: \"heatpoints\",\r\n          maxzoom: 24,\r\n          paint: {\r\n            // Increase the heatmap weight based on frequency and property magnitude\r\n            \"heatmap-weight\": 1,\r\n            // Increase the heatmap color weight weight by zoom level\r\n            // heatmap-intensity is a multiplier on top of heatmap-weight\r\n            \"heatmap-intensity\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              16,\r\n              0.2,\r\n              22,\r\n              1,\r\n            ],\r\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n            // Begin color ramp at 0-stop with a 0-transparancy color\r\n            // to create a blur-like effect.\r\n            \"heatmap-color\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"heatmap-density\"],\r\n              0,\r\n              \"rgba(0,0,255,0)\",\r\n              0.2,\r\n              \"#1FAFFC\",\r\n              0.4,\r\n              \"#5BD76F\",\r\n              0.6,\r\n              \"#FFE61E\",\r\n              0.8,\r\n              \"#FF7B00\",\r\n              1,\r\n              \"#FF3333\",\r\n            ],\r\n            // Adjust the heatmap radius by zoom level\r\n            \"heatmap-radius\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              10,\r\n              5,\r\n              22,\r\n              30,\r\n            ],\r\n            \"heatmap-opacity\": 0.8,\r\n          },\r\n        });\r\n      });\r\n      map.on(\"click\", onMapClick);\r\n    };\r\n    campusInfo();\r\n  }, []);\r\n\r\n  const onMapClick = (e) => {\r\n    var lngLat = e.lngLat;\r\n\r\n    console.log(lngLat);\r\n  };\r\n\r\n  const generateJson = (parsedRespones) => {\r\n    const coordinateArr = [\r\n      { lng: 20.308349705835496, lat: 63.81900592551949 },\r\n      { lng: 20.308192882367734, lat: 63.81900568662371 },\r\n      { lng: 20.307978380978028, lat: 63.81900697599215 },\r\n      { lng: 20.307055316506563, lat: 63.81906415884902 },\r\n      { lng: 20.30706140226104, lat: 63.81923733767948 },\r\n      { lng: 20.307065643789542, lat: 63.81931117656464 },\r\n      { lng: 20.30707299349453, lat: 63.81950588172853 },\r\n      { lng: 20.3070748958213, lat: 63.81956184331548 },\r\n      { lng: 20.306956961518694, lat: 63.81952031622194 },\r\n      { lng: 20.307181110854373, lat: 63.81968109837368 },\r\n    ];\r\n\r\n    let featureCollection = {};\r\n    featureCollection.type = \"FeatureCollection\";\r\n    featureCollection.features = [];\r\n\r\n    coordinateArr.map((coord, i) => {\r\n      if (parsedRespones.data[i] !== null) {\r\n        for (let j = 0; j < parsedRespones.data[i].dd.pir; j++) {\r\n          let latVariance = Math.random() * 0.000019;\r\n          let longVariance = Math.random() * 0.000022;\r\n          latVariance *= Math.round(Math.random()) ? 1 : -1;\r\n          longVariance *= Math.round(Math.random()) ? 1 : -1;\r\n\r\n          let feature = {};\r\n          feature.geometry = {\r\n            type: \"Point\",\r\n            coordinates: [coord.lng + longVariance, coord.lat + latVariance],\r\n          };\r\n          featureCollection.features.push(feature);\r\n        }\r\n      }\r\n    });\r\n\r\n    // console.log(featureCollection);\r\n    return featureCollection;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"map\" className=\"mazemap\" style={{ width: \"100%\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Landing.js",[],"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\CheckIn.js",[],"C:\\Users\\Isak\\VSCodeProjects\\CovidOnCampus\\Combat-Covid-On-Campus\\src\\pages\\Login.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":9,"column":7,"nodeType":"43","messageId":"44","endLine":9,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":115,"column":34,"nodeType":"47","messageId":"48","endLine":115,"endColumn":36},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'axios' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]